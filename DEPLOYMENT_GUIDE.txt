===============================================
DEPLOYMENT GUIDE: SHOPIFY INTEGRATION PLATFORM
===============================================

This guide will walk you through deploying this application with all your data to any hosting provider (like Replit, Heroku, etc.)

PREREQUISITES
------------

Before starting, ensure you have:

1. The source code of the application
2. Your Shopify API credentials (API Key, API Secret, Store URL)
3. A PostgreSQL database connection string from your hosting provider

STEP 1: EXPORT YOUR DATA
-----------------------

First, export your existing data from your development environment:

# Run the export script
node export-data.cjs

This will create a file called 'database-export.json' containing all your products, stats, logs, and notifications.

IMPORTANT: Download this file to your local machine so you can upload it to your deployment environment.

STEP 2: SET UP DEPLOYMENT ENVIRONMENT
------------------------------------

In your deployment environment (e.g., Replit):

1. Upload or clone the project code
2. Upload the 'database-export.json' file to the root directory
3. Set up the following environment variables:

DATABASE_URL=<your-postgresql-database-url>
SHOPIFY_API_KEY=<your-shopify-api-key>
SHOPIFY_API_SECRET=<your-shopify-api-secret>
SHOPIFY_STORE_URL=<your-shopify-store-url>
PORT=<port-number> (if required by your hosting provider)

STEP 3: IMPORT YOUR DATA
-----------------------

Run the import script to populate your database:

# Run the import script
node import-data.cjs

The script will:
- Check if tables exist and create them if needed
- Ask if you want to clear existing data (if any)
- Import all your products, stats, logs, and notifications
- Update database sequences

STEP 4: DEPLOY YOUR APPLICATION
------------------------------

Once your data is imported, deploy the application using the complete deployment script:

# Run the deployment script
node complete-deploy.cjs

This script will:
1. Verify all environment variables
2. Connect to the database
3. Check for and import data if needed (uses the same import as Step 3)
4. Start the Express server with proper Shopify API connection

TROUBLESHOOTING
--------------

DATABASE ISSUES:

If you encounter database connection issues:

1. Verify your DATABASE_URL environment variable is correct
2. Ensure your database is accessible from your deployment environment
3. Check that the PostgreSQL database is running and accepting connections

SHOPIFY API ISSUES:

If you encounter Shopify API connection issues:

1. Verify your Shopify API credentials (SHOPIFY_API_KEY, SHOPIFY_API_SECRET, SHOPIFY_STORE_URL)
2. Check if your Shopify store is accessible
3. Test the connection using the /api/shopify/connection-test endpoint
4. Ensure your Shopify app has the necessary permissions

DATA MIGRATION ISSUES:

If you encounter data migration issues:

1. Check if your database-export.json file exists and is valid
2. Verify the database has enough space for your data
3. Try importing data manually using the SQL tool or pgAdmin
4. Check if you have the necessary permissions to create tables and insert data

VERIFICATION
-----------

After deployment, verify that:

1. You can access the login page at the root URL
2. You can log in with your credentials (Username: Admin, Password: Ttiinnyy1)
3. The dashboard shows the correct number of products
4. The Shopify API connection status shows "Connected"
5. You can view your products and their cost prices

MAINTENANCE
----------

To keep your deployment up to date:

1. Regularly back up your database
2. Export data before making significant changes
3. Keep your Shopify API credentials secure
4. Monitor the logs for any errors or warnings

For any further assistance, contact support or refer to the documentation.